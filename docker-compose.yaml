services:

  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    env_file: .env
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./utils:/docker-entrypoint-initdb.d/utils
      - ./data_dumps:/docker-entrypoint-initdb.d/data_dumps
    ports:
      - "5432:5432"
    networks:
      - local_net
      
  airflow-webserver:
    image: apache/airflow:2.7.1
    container_name: airflow-webserver
    restart: unless-stopped
    env_file: .env
    command: webserver
    ports:
      - "8080:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/bootstrap:/opt/airflow/bootstrap
    networks:
      - local_net
    depends_on:
      - postgres
      - airflow-init

  airflow-scheduler:
    image: apache/airflow:2.7.1
    container_name: airflow-scheduler
    restart: unless-stopped
    env_file: .env
    command: scheduler
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    networks:
      - local_net
    depends_on:
      - postgres
      - airflow-init

  airflow-init:
    image: apache/airflow:2.7.1
    container_name: airflow-init
    env_file: .env
    entrypoint: /opt/airflow/bootstrap/init_connections.sh
    volumes:
    - ./airflow/bootstrap:/opt/airflow/bootstrap
    networks:
    - local_net
    depends_on:
    - postgres


#  pgadmin:
#    image: dpage/pgadmin4:latest
#    container_name: pgadmin
#    environment:
#      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
#      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
#    ports:
#      - "5050:80"
#    volumes:
#      - ./pgadmin_data:/var/lib/pgadmin
#    depends_on:
#      - postgres
#    networks:
#      - local_net

#  metabase:
#    image: metabase/metabase:v0.48.6
#    container_name: metabase
#    restart: always
#    env_file: .env
#    volumes:
#      - ./metabase_data:/metabase-data    
#    ports:
#      - "3000:3000"
#    networks:
#      - local_net      
#

#  jupyter:
#    image: jupyter/datascience-notebook:python-3.11.6
#    container_name: jupyter
#    restart: always
#    volumes:
#      - ./jupyter:/home/jovyan/work
#      - ./dumps:/home/jovyan/dumps
#    networks:
#      - local_net      
#    ports:
#      - "8888:8888"

volumes:
  postgres_data:

networks:
  local_net:
    driver: bridge