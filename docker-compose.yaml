services:

  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    env_file: .env
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./utils:/docker-entrypoint-initdb.d/utils
      - ./data_dumps:/docker-entrypoint-initdb.d/data_dumps
    ports:
      - "5432:5432"
    networks:
      - local_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  airflow-init:
    image: apache/airflow:2.7.1
    container_name: airflow-init
    env_file: .env
    entrypoint: /opt/airflow/bootstrap/init_connections.sh
    volumes:
    - ./airflow/bootstrap:/opt/airflow/bootstrap
    networks:
    - local_net
    depends_on:
      postgres:
        condition: service_healthy
      
  airflow-webserver:
    image: apache/airflow:2.7.1
    build:
      context: ./airflow
    container_name: airflow-webserver
    restart: unless-stopped
    env_file: .env
    command: webserver
    ports:
      - "8080:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    networks:
      - local_net
    depends_on:
      - postgres
      - airflow-init

  airflow-scheduler:
    image: apache/airflow:2.7.1
    container_name: airflow-scheduler
    restart: unless-stopped
    env_file: .env
    command: scheduler
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    networks:
      - local_net
    depends_on:
      - postgres
      - airflow-init

  metabase:
    image: metabase/metabase:v0.56.x
    container_name: metabase
    restart: always
    env_file: .env
#    volumes:
#      - ./metabase_data:/metabase-data > we are using Postgres for Metabase storage
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - local_net

volumes:
  postgres_data:

networks:
  local_net:
    name: local_net
    driver: bridge    