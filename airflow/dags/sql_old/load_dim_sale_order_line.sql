-- =====================================================
-- Dimension table for sale_order_line
-- =====================================================
CREATE SCHEMA IF NOT EXISTS dwh;

CREATE TABLE IF NOT EXISTS dwh.dim_sale_order_line (
    sale_order_line_sk SERIAL PRIMARY KEY,
    sale_order_line_id INT UNIQUE,   -- Odoo ID BK
    sale_order_id INT,               -- link to dim_sale_order
    name TEXT,
    sequence INT,
    invoice_status TEXT,
    price_unit NUMERIC,
    price_subtotal NUMERIC,
    price_tax NUMERIC,
    price_total NUMERIC,
    price_reduce NUMERIC,
    price_reduce_taxinc NUMERIC,
    price_reduce_taxexcl NUMERIC,
    discount NUMERIC,
    product_id INT,                  -- link to dim_product
    product_uom_qty NUMERIC,
    product_uom TEXT,
    qty_delivered_method TEXT,
    qty_delivered NUMERIC,
    qty_delivered_manual NUMERIC,
    qty_to_invoice NUMERIC,
    qty_invoiced NUMERIC,
    untaxed_amount_invoiced NUMERIC,
    untaxed_amount_to_invoice NUMERIC,
    salesman_id INT,                 -- link to dim_employee
    company_id INT,
    order_partner_id INT,            -- link to dim_partner
    state TEXT,
    width NUMERIC,
    height NUMERIC,
    stg_loaded_at TIMESTAMP,
    stg_batch_id VARCHAR
);

-- =====================================================
-- FULL LOAD (truncate + reload)
-- Use this for initial backfill
-- =====================================================
-- TRUNCATE dwh.dim_sale_order_line;

-- INSERT INTO dwh.dim_sale_order_line (
--     sale_order_line_id,
--     sale_order_id,
--     name,
--     sequence,
--     invoice_status,
--     price_unit,
--     price_subtotal,
--     price_tax,
--     price_total,
--     price_reduce,
--     price_reduce_taxinc,
--     price_reduce_taxexcl,
--     discount,
--     product_id,
--     product_uom_qty,
--     product_uom,
--     qty_delivered_method,
--     qty_delivered,
--     qty_delivered_manual,
--     qty_to_invoice,
--     qty_invoiced,
--     untaxed_amount_invoiced,
--     untaxed_amount_to_invoice,
--     salesman_id,
--     company_id,
--     order_partner_id,
--     state,
--     width,
--     height,
--     stg_loaded_at,
--     stg_batch_id
-- )
-- SELECT
--     id AS sale_order_line_id,
--     sale_order_id,
--     name,
--     sequence,
--     invoice_status,
--     price_unit,
--     price_subtotal,
--     price_tax,
--     price_total,
--     price_reduce,
--     price_reduce_taxinc,
--     price_reduce_taxexcl,
--     discount,
--     product_id,
--     product_uom_qty,
--     product_uom,
--     qty_delivered_method,
--     qty_delivered,
--     qty_delivered_manual,
--     qty_to_invoice,
--     qty_invoiced,
--     untaxed_amount_invoiced,
--     untaxed_amount_to_invoice,
--     salesman_id,
--     company_id,
--     order_partner_id,
--     state,
--     width,
--     height,
--     stg_loaded_at,
--     stg_batch_id
-- FROM stg.sale_order_line s;

-- =====================================================
-- INCREMENTAL UPSERT
-- Use this for near real-time updates
-- =====================================================
INSERT INTO dwh.dim_sale_order_line (
    sale_order_line_id,
    sale_order_id,
    name,
    sequence,
    invoice_status,
    price_unit,
    price_subtotal,
    price_tax,
    price_total,
    price_reduce,
    price_reduce_taxinc,
    price_reduce_taxexcl,
    discount,
    product_id,
    product_uom_qty,
    product_uom,
    qty_delivered_method,
    qty_delivered,
    qty_delivered_manual,
    qty_to_invoice,
    qty_invoiced,
    untaxed_amount_invoiced,
    untaxed_amount_to_invoice,
    salesman_id,
    company_id,
    order_partner_id,
    state,
    width,
    height,
    stg_loaded_at,
    stg_batch_id
)
SELECT
    id AS sale_order_line_id,
    sale_order_id,
    name,
    sequence,
    invoice_status,
    price_unit,
    price_subtotal,
    price_tax,
    price_total,
    price_reduce,
    price_reduce_taxinc,
    price_reduce_taxexcl,
    discount,
    product_id,
    product_uom_qty,
    product_uom,
    qty_delivered_method,
    qty_delivered,
    qty_delivered_manual,
    qty_to_invoice,
    qty_invoiced,
    untaxed_amount_invoiced,
    untaxed_amount_to_invoice,
    salesman_id,
    company_id,
    order_partner_id,
    state,
    width,
    height,
    stg_loaded_at,
    stg_batch_id
FROM stg.sale_order_line s
ON CONFLICT (sale_order_line_id) DO UPDATE
SET
    sale_order_id = EXCLUDED.sale_order_id,
    name = EXCLUDED.name,
    sequence = EXCLUDED.sequence,
    invoice_status = EXCLUDED.invoice_status,
    price_unit = EXCLUDED.price_unit,
    price_subtotal = EXCLUDED.price_subtotal,
    price_tax = EXCLUDED.price_tax,
    price_total = EXCLUDED.price_total,
    price_reduce = EXCLUDED.price_reduce,
    price_reduce_taxinc = EXCLUDED.price_reduce_taxinc,
    price_reduce_taxexcl = EXCLUDED.price_reduce_taxexcl,
    discount = EXCLUDED.discount,
    product_id = EXCLUDED.product_id,
    product_uom_qty = EXCLUDED.product_uom_qty,
    product_uom = EXCLUDED.product_uom,
    qty_delivered_method = EXCLUDED.qty_delivered_method,
    qty_delivered = EXCLUDED.qty_delivered,
    qty_delivered_manual = EXCLUDED.qty_delivered_manual,
    qty_to_invoice = EXCLUDED.qty_to_invoice,
    qty_invoiced = EXCLUDED.qty_invoiced,
    untaxed_amount_invoiced = EXCLUDED.untaxed_amount_invoiced,
    untaxed_amount_to_invoice = EXCLUDED.untaxed_amount_to_invoice,
    salesman_id = EXCLUDED.salesman_id,
    company_id = EXCLUDED.company_id,
    order_partner_id = EXCLUDED.order_partner_id,
    state = EXCLUDED.state,
    width = EXCLUDED.width,
    height = EXCLUDED.height,
    stg_loaded_at = EXCLUDED.stg_loaded_at,
    stg_batch_id = EXCLUDED.stg_batch_id;
