-- =====================================================
-- Dimension table for account_move
-- =====================================================
CREATE SCHEMA IF NOT EXISTS dwh;

CREATE TABLE IF NOT EXISTS dwh.dim_account_move (
    account_move_sk SERIAL PRIMARY KEY,
    account_move_id INT UNIQUE,     -- Odoo ID
    name TEXT,
    date TIMESTAMP,
    ref TEXT,                       -- important for linking with planning (name_seq)
    narration TEXT,
    state TEXT,
    type TEXT,
    to_check BOOLEAN,
    journal_id INT,                 -- link to dim_account_journal
    company_id INT,
    partner_id INT,                 -- link to dim_partner
    amount_untaxed NUMERIC,
    amount_tax NUMERIC,
    amount_total NUMERIC,
    amount_residual NUMERIC,
    amount_untaxed_signed NUMERIC,
    amount_tax_signed NUMERIC,
    amount_total_signed NUMERIC,
    amount_residual_signed NUMERIC,
    fiscal_position_id INT,
    invoice_user_id INT,            -- link to dim_employee
    invoice_payment_state TEXT,
    invoice_date TIMESTAMP,
    invoice_date_due TIMESTAMP,
    invoice_payment_ref TEXT,
    invoice_sent BOOLEAN,
    invoice_origin TEXT,
    invoice_partner_display_name TEXT,
    create_date TIMESTAMP,
    partner_shipping_id INT,        -- link to dim_partner
    project_title TEXT,
    ville_client TEXT,
    region_client TEXT,
    invoice_origin_id INT,
    relance_tel TEXT,
    date_relance_tel TIMESTAMP,
    note_relance TEXT,
    pose_fini BOOLEAN,
    discount_rate NUMERIC,
    amount_discount NUMERIC,
    stg_loaded_at TIMESTAMP,
    stg_batch_id VARCHAR
);

-- =====================================================
-- FULL LOAD (truncate + reload)
-- Use this for initial backfill
-- =====================================================
-- TRUNCATE dwh.dim_account_move;

-- INSERT INTO dwh.dim_account_move (
--     account_move_id,
--     name,
--     date,
--     ref,
--     narration,
--     state,
--     type,
--     to_check,
--     journal_id,
--     company_id,
--     partner_id,
--     amount_untaxed,
--     amount_tax,
--     amount_total,
--     amount_residual,
--     amount_untaxed_signed,
--     amount_tax_signed,
--     amount_total_signed,
--     amount_residual_signed,
--     fiscal_position_id,
--     invoice_user_id,
--     invoice_payment_state,
--     invoice_date,
--     invoice_date_due,
--     invoice_payment_ref,
--     invoice_sent,
--     invoice_origin,
--     invoice_partner_display_name,
--     create_date,
--     partner_shipping_id,
--     project_title,
--     ville_client,
--     region_client,
--     invoice_origin_id,
--     relance_tel,
--     date_relance_tel,
--     note_relance,
--     pose_fini,
--     discount_rate,
--     amount_discount,
--     stg_loaded_at,
--     stg_batch_id
-- )
-- SELECT
--     id AS account_move_id,
--     name,
--     date,
--     ref,
--     narration,
--     state,
--     type,
--     to_check,
--     journal_id,
--     company_id,
--     partner_id,
--     amount_untaxed,
--     amount_tax,
--     amount_total,
--     amount_residual,
--     amount_untaxed_signed,
--     amount_tax_signed,
--     amount_total_signed,
--     amount_residual_signed,
--     fiscal_position_id,
--     invoice_user_id,
--     invoice_payment_state,
--     invoice_date,
--     invoice_date_due,
--     invoice_payment_ref,
--     invoice_sent,
--     invoice_origin,
--     invoice_partner_display_name,
--     create_date,
--     partner_shipping_id,
--     project_title,
--     ville_client,
--     region_client,
--     invoice_origin_id,
--     relance_tel,
--     date_relance_tel,
--     note_relance,
--     pose_fini,
--     discount_rate,
--     amount_discount,
--     stg_loaded_at,
--     stg_batch_id
-- FROM stg.account_move s;

-- =====================================================
-- INCREMENTAL UPSERT
-- Use this for near real-time updates
-- =====================================================
INSERT INTO dwh.dim_account_move (
    account_move_id,
    name,
    date,
    ref,
    narration,
    state,
    type,
    to_check,
    journal_id,
    company_id,
    partner_id,
    amount_untaxed,
    amount_tax,
    amount_total,
    amount_residual,
    amount_untaxed_signed,
    amount_tax_signed,
    amount_total_signed,
    amount_residual_signed,
    fiscal_position_id,
    invoice_user_id,
    invoice_payment_state,
    invoice_date,
    invoice_date_due,
    invoice_payment_ref,
    invoice_sent,
    invoice_origin,
    invoice_partner_display_name,
    create_date,
    partner_shipping_id,
    project_title,
    ville_client,
    region_client,
    invoice_origin_id,
    relance_tel,
    date_relance_tel,
    note_relance,
    pose_fini,
    discount_rate,
    amount_discount,
    stg_loaded_at,
    stg_batch_id
)
SELECT
    id AS account_move_id,
    name,
    date,
    ref,
    narration,
    state,
    type,
    to_check,
    journal_id,
    company_id,
    partner_id,
    amount_untaxed,
    amount_tax,
    amount_total,
    amount_residual,
    amount_untaxed_signed,
    amount_tax_signed,
    amount_total_signed,
    amount_residual_signed,
    fiscal_position_id,
    invoice_user_id,
    invoice_payment_state,
    invoice_date,
    invoice_date_due,
    invoice_payment_ref,
    invoice_sent,
    invoice_origin,
    invoice_partner_display_name,
    create_date,
    partner_shipping_id,
    project_title,
    ville_client,
    region_client,
    invoice_origin_id,
    relance_tel,
    date_relance_tel,
    note_relance,
    pose_fini,
    discount_rate,
    amount_discount,
    stg_loaded_at,
    stg_batch_id
FROM stg.account_move s
ON CONFLICT (account_move_id) DO UPDATE
SET
    name = EXCLUDED.name,
    date = EXCLUDED.date,
    ref = EXCLUDED.ref,
    narration = EXCLUDED.narration,
    state = EXCLUDED.state,
    type = EXCLUDED.type,
    to_check = EXCLUDED.to_check,
    journal_id = EXCLUDED.journal_id,
    company_id = EXCLUDED.company_id,
    partner_id = EXCLUDED.partner_id,
    amount_untaxed = EXCLUDED.amount_untaxed,
    amount_tax = EXCLUDED.amount_tax,
    amount_total = EXCLUDED.amount_total,
    amount_residual = EXCLUDED.amount_residual,
    amount_untaxed_signed = EXCLUDED.amount_untaxed_signed,
    amount_tax_signed = EXCLUDED.amount_tax_signed,
    amount_total_signed = EXCLUDED.amount_total_signed,
    amount_residual_signed = EXCLUDED.amount_residual_signed,
    fiscal_position_id = EXCLUDED.fiscal_position_id,
    invoice_user_id = EXCLUDED.invoice_user_id,
    invoice_payment_state = EXCLUDED.invoice_payment_state,
    invoice_date = EXCLUDED.invoice_date,
    invoice_date_due = EXCLUDED.invoice_date_due,
    invoice_payment_ref = EXCLUDED.invoice_payment_ref,
    invoice_sent = EXCLUDED.invoice_sent,
    invoice_origin = EXCLUDED.invoice_origin,
    invoice_partner_display_name = EXCLUDED.invoice_partner_display_name,
    create_date = EXCLUDED.create_date,
    partner_shipping_id = EXCLUDED.partner_shipping_id,
    project_title = EXCLUDED.project_title,
    ville_client = EXCLUDED.ville_client,
    region_client = EXCLUDED.region_client,
    invoice_origin_id = EXCLUDED.invoice_origin_id,
    relance_tel = EXCLUDED.relance_tel,
    date_relance_tel = EXCLUDED.date_relance_tel,
    note_relance = EXCLUDED.note_relance,
    pose_fini = EXCLUDED.pose_fini,
    discount_rate = EXCLUDED.discount_rate,
    amount_discount = EXCLUDED.amount_discount,
    stg_loaded_at = EXCLUDED.stg_loaded_at,
    stg_batch_id = EXCLUDED.stg_batch_id;
