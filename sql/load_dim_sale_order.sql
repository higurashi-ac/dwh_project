-- =====================================================
-- Dimension table for sale_order
-- =====================================================
CREATE SCHEMA IF NOT EXISTS dwh;

CREATE TABLE IF NOT EXISTS dwh.dim_sale_order (
    sale_order_sk SERIAL PRIMARY KEY,
    sale_order_id INT UNIQUE,   -- BK Odoo ID
    name TEXT,
    state TEXT,
    date_order TIMESTAMP,
    create_date TIMESTAMP,
    user_id INT,                -- link to dim_employee
    partner_id INT,             -- link to dim_partner (customer)
    pricelist_id INT,
    invoice_status TEXT,
    note TEXT,
    amount_untaxed NUMERIC,
    amount_tax NUMERIC,
    amount_total NUMERIC,
    company_id INT,
    fiscal_position_id INT,
    team_id INT,
    signed_by TEXT,
    signed_on TIMESTAMP,
    project_title TEXT,
    planning_id INT,            -- potential link to planning_slot
    state_devis TEXT,
    zip_client TEXT,
    ville_client TEXT,
    region_client TEXT,
    ref_intervention TEXT,
    source TEXT,
    relance TEXT,
    note_relance TEXT,
    date_relance TIMESTAMP,
    atelier_id INT,
    responsable_intervention TEXT,
    status_pose TEXT,
    remarque TEXT,
    decharge TEXT,
    invoice_id INT,
    discount_type TEXT,
    discount_rate NUMERIC,
    amount_discount NUMERIC,
    warehouse_id INT,
    procurement_group_id INT,
    effective_date TIMESTAMP,
    stg_loaded_at TIMESTAMP,
    stg_batch_id VARCHAR
);

-- =====================================================
-- FULL LOAD (truncate + reload)
-- Use this for initial backfill
-- =====================================================
-- TRUNCATE dwh.dim_sale_order;

-- INSERT INTO dwh.dim_sale_order (
--     sale_order_id,
--     name,
--     state,
--     date_order,
--     create_date,
--     user_id,
--     partner_id,
--     pricelist_id,
--     invoice_status,
--     note,
--     amount_untaxed,
--     amount_tax,
--     amount_total,
--     company_id,
--     fiscal_position_id,
--     team_id,
--     signed_by,
--     signed_on,
--     project_title,
--     planning_id,
--     state_devis,
--     zip_client,
--     ville_client,
--     region_client,
--     ref_intervention,
--     source,
--     relance,
--     note_relance,
--     date_relance,
--     atelier_id,
--     responsable_intervention,
--     status_pose,
--     remarque,
--     decharge,
--     invoice_id,
--     discount_type,
--     discount_rate,
--     amount_discount,
--     warehouse_id,
--     procurement_group_id,
--     effective_date,
--     stg_loaded_at,
--     stg_batch_id
-- )
-- SELECT
--     id AS sale_order_id,
--     name,
--     state,
--     date_order,
--     create_date,
--     user_id,
--     partner_id,
--     pricelist_id,
--     invoice_status,
--     note,
--     amount_untaxed,
--     amount_tax,
--     amount_total,
--     company_id,
--     fiscal_position_id,
--     team_id,
--     signed_by,
--     signed_on,
--     project_title,
--     planning_id,
--     state_devis,
--     zip_client,
--     ville_client,
--     region_client,
--     ref_intervention,
--     source,
--     relance,
--     note_relance,
--     date_relance,
--     atelier_id,
--     responsable_intervention,
--     status_pose,
--     remarque,
--     decharge,
--     invoice_id,
--     discount_type,
--     discount_rate,
--     amount_discount,
--     warehouse_id,
--     procurement_group_id,
--     effective_date,
--     stg_loaded_at,
--     stg_batch_id
-- FROM stg.sale_order s;

-- =====================================================
-- INCREMENTAL UPSERT
-- Use this for near real-time updates
-- =====================================================
INSERT INTO dwh.dim_sale_order (
    sale_order_id,
    name,
    state,
    date_order,
    create_date,
    user_id,
    partner_id,
    pricelist_id,
    invoice_status,
    note,
    amount_untaxed,
    amount_tax,
    amount_total,
    company_id,
    fiscal_position_id,
    team_id,
    signed_by,
    signed_on,
    project_title,
    planning_id,
    state_devis,
    zip_client,
    ville_client,
    region_client,
    ref_intervention,
    source,
    relance,
    note_relance,
    date_relance,
    atelier_id,
    responsable_intervention,
    status_pose,
    remarque,
    decharge,
    invoice_id,
    discount_type,
    discount_rate,
    amount_discount,
    warehouse_id,
    procurement_group_id,
    effective_date,
    stg_loaded_at,
    stg_batch_id
)
SELECT
    id AS sale_order_id,
    name,
    state,
    date_order,
    create_date,
    user_id,
    partner_id,
    pricelist_id,
    invoice_status,
    note,
    amount_untaxed,
    amount_tax,
    amount_total,
    company_id,
    fiscal_position_id,
    team_id,
    signed_by,
    signed_on,
    project_title,
    planning_id,
    state_devis,
    zip_client,
    ville_client,
    region_client,
    ref_intervention,
    source,
    relance,
    note_relance,
    date_relance,
    atelier_id,
    responsable_intervention,
    status_pose,
    remarque,
    decharge,
    invoice_id,
    discount_type,
    discount_rate,
    amount_discount,
    warehouse_id,
    procurement_group_id,
    effective_date,
    stg_loaded_at,
    stg_batch_id
FROM stg.sale_order s
ON CONFLICT (sale_order_id) DO UPDATE
SET
    name = EXCLUDED.name,
    state = EXCLUDED.state,
    date_order = EXCLUDED.date_order,
    create_date = EXCLUDED.create_date,
    user_id = EXCLUDED.user_id,
    partner_id = EXCLUDED.partner_id,
    pricelist_id = EXCLUDED.pricelist_id,
    invoice_status = EXCLUDED.invoice_status,
    note = EXCLUDED.note,
    amount_untaxed = EXCLUDED.amount_untaxed,
    amount_tax = EXCLUDED.amount_tax,
    amount_total = EXCLUDED.amount_total,
    company_id = EXCLUDED.company_id,
    fiscal_position_id = EXCLUDED.fiscal_position_id,
    team_id = EXCLUDED.team_id,
    signed_by = EXCLUDED.signed_by,
    signed_on = EXCLUDED.signed_on,
    project_title = EXCLUDED.project_title,
    planning_id = EXCLUDED.planning_id,
    state_devis = EXCLUDED.state_devis,
    zip_client = EXCLUDED.zip_client,
    ville_client = EXCLUDED.ville_client,
    region_client = EXCLUDED.region_client,
    ref_intervention = EXCLUDED.ref_intervention,
    source = EXCLUDED.source,
    relance = EXCLUDED.relance,
    note_relance = EXCLUDED.note_relance,
    date_relance = EXCLUDED.date_relance,
    atelier_id = EXCLUDED.atelier_id,
    responsable_intervention = EXCLUDED.responsable_intervention,
    status_pose = EXCLUDED.status_pose,
    remarque = EXCLUDED.remarque,
    decharge = EXCLUDED.decharge,
    invoice_id = EXCLUDED.invoice_id,
    discount_type = EXCLUDED.discount_type,
    discount_rate = EXCLUDED.discount_rate,
    amount_discount = EXCLUDED.amount_discount,
    warehouse_id = EXCLUDED.warehouse_id,
    procurement_group_id = EXCLUDED.procurement_group_id,
    effective_date = EXCLUDED.effective_date,
    stg_loaded_at = EXCLUDED.stg_loaded_at,
    stg_batch_id = EXCLUDED.stg_batch_id;
